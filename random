import pygame
import random

# Initialize Pygame
pygame.init()

# Set up game window
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Dodge the Blocks!")

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Define player properties
player_width = 50
player_height = 50
player_x = WIDTH // 2 - player_width // 2
player_y = HEIGHT - player_height - 10
player_speed = 5

# Define block properties
block_width = 50
block_height = 50
block_speed = 5

# Set up font for score
font = pygame.font.SysFont(None, 30)

# Set up the clock
clock = pygame.time.Clock()

# Initialize score
score = 0

# Function to display the score
def display_score(score):
    score_text = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_text, (10, 10))

# Function to draw player
def draw_player(x, y):
    pygame.draw.rect(screen, WHITE, (x, y, player_width, player_height))

# Function to draw block
def draw_block(x, y):
    pygame.draw.rect(screen, RED, (x, y, block_width, block_height))

# Function to check if player collides with a block
def check_collision(player_x, player_y, block_x, block_y):
    if player_x < block_x + block_width and player_x + player_width > block_x and player_y < block_y + block_height and player_y + player_height > block_y:
        return True
    return False

# Game loop
def game_loop():
    global player_x, score

    blocks = []
    run_game = True
    while run_game:
        screen.fill(BLACK)

        # Handle events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run_game = False

        # Get keys pressed for player movement
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and player_x > 0:
            player_x -= player_speed
        if keys[pygame.K_RIGHT] and player_x < WIDTH - player_width:
            player_x += player_speed

        # Move blocks and check collisions
        for block in blocks:
            block[1] += block_speed
            if block[1] > HEIGHT:
                blocks.remove(block)
                score += 1  # Increase score when block passes through

            if check_collision(player_x, player_y, block[0], block[1]):
                run_game = False  # End game on collision

            draw_block(block[0], block[1])

        # Generate new blocks randomly
        if random.randint(1, 20) == 1:
            block_x = random.randint(0, WIDTH - block_width)
            blocks.append([block_x, 0])

        # Draw player
        draw_player(player_x, player_y)

        # Display score
        display_score(score)

        # Update the display
        pygame.display.update()

        # Set the game speed (FPS)
        clock.tick(60)

    pygame.quit()
    quit()

# Start the game loop
game_loop()
